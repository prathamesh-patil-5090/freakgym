@import "tailwindcss";
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* Remove theme-specific accent colors from here */
  --black: #000000;
  --dark-gray: #1A1A1A;
  --light-gray: #333333;
  --white: #FFFFFF;
  --foreground-rgb: 0, 0, 0; /* Default to light mode text */
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

/* Light mode colors */
.light-mode {
  --bg-primary: #FFFFFF;
  --text-primary: #333333;
  --text-secondary: #666666; 
  --text-accent: #2E7D32; /* Darker green for text in light mode */
  --text-hover: #4CAF50; /* Green for hover in light mode */
  --bg-secondary: #F3F4F6; /* Added secondary background */
  --border-color: #E5E7EB; /* Added border color */
  --grid-color: rgba(200, 200, 200, 0.5);
  --circuit-color: rgba(0, 180, 120, 0.1);
  --gradient-start: rgba(240, 240, 240, 0.2);
  --gradient-end: rgba(255, 255, 255, 0.95);
  --particle-color: rgba(0, 180, 120, 0.2);
  --accent-color: #4CAF50; /* Green */
  --accent-hover: #2E7D32; /* Darker Green */
  --glow-color: rgba(0, 180, 120, 0.15); /* Green glow */
}

/* Dark mode colors */
.dark-mode {
  --bg-primary: #000000;
  --text-primary: #FFFFFF;
  --text-secondary: #A0A0A0; 
  --text-accent: #00FFFF; /* Cyan for text in dark mode */
  --text-hover: #00CED1; /* Darker cyan for hover in dark mode */
  --bg-secondary: #1A1A1A; /* Added secondary background */
  --border-color: #333333; /* Added border color */
  --grid-color: rgba(40, 40, 40, 0.1);
  --circuit-color: rgba(0, 255, 170, 0.05);
  --gradient-start: rgba(40, 40, 40, 0.4);
  --gradient-end: rgba(0, 0, 0, 0.95);
  --particle-color: rgba(255, 255, 255, 0.2);
  --accent-color: #00FFFF; /* Cyan */
  --accent-hover: #00CED1; /* Darker Cyan */
  --glow-color: rgba(0, 255, 255, 0.15); /* Cyan glow */
}

/* Remove prefers-color-scheme media query as theme is controlled by class */

body {
  color: var(--text-primary);
  background: var(--bg-primary);
  position: relative;
  min-height: 100vh;
  overflow: hidden;
  transition: background-color 0.3s ease, color 0.3s ease; /* Smooth theme transition */
}

/* Custom focus styles using accent color */
input:focus, button:focus {
  outline: 2px solid var(--accent-color);
  outline-offset: 2px;
  transition: outline-color 0.3s ease; /* Transition for focus outline */
}

/* Remove border from input fields globally */
input {
  border: none; /* Remove default border */
  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease; /* Add transition for background and text color */
}

/* Remove specific .bg-electric-blue etc. Use Tailwind with CSS vars */


@keyframes gridMove {
  0% {
      background-position: 0 0;
  }
  100% {
      background-position: 50px 50px;
  }
}

/* Enhanced Glow Elements */
.glow-elements {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 4;
}

.glow-elements li {
  position: absolute;
  display: block;
  list-style: none;
  background: transparent;
  animation: floatAnimation 25s linear infinite;
  bottom: -150px;
  border-radius: 50%;
  box-shadow: 0 0 25px 8px var(--glow-color);
  transition: box-shadow 0.3s ease; /* Add transition for the glow color */
}

.glow-elements li:nth-child(1) {
  left: 25%;
  width: 120px;
  height: 120px;
  animation-delay: 0s;
}

.glow-elements li:nth-child(2) {
  left: 10%;
  width: 30px;
  height: 30px;
  animation-delay: 2s;
  animation-duration: 12s;
}

.glow-elements li:nth-child(3) {
  left: 70%;
  width: 50px;
  height: 50px;
  animation-delay: 4s;
}

.glow-elements li:nth-child(4) {
  left: 40%;
  width: 80px;
  height: 80px;
  animation-delay: 0s;
  animation-duration: 18s;
}

.glow-elements li:nth-child(5) {
  left: 65%;
  width: 40px;
  height: 40px;
  animation-delay: 0s;
}

@keyframes floatAnimation {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 0.7;
  }
  90% {
    opacity: 0.3;
  }
  100% {
    transform: translateY(-1000px) rotate(720deg);
    opacity: 0;
  }
}

/* Enhanced Particle System */
.particles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 3;
}

.particles span {
  position: absolute;
  display: block;
  width: 2px;
  height: 2px;
  background: var(--particle-color);
  animation: particles 15s linear infinite;
  border-radius: 50%;
  bottom: -10px;
  transition: background-color 0.3s ease; /* Add transition for particle background */
}

/* Different sized particles - Use accent color */
.particles .particle-medium {
  width: 4px;
  height: 4px;
  background: color-mix(in srgb, var(--accent-color) 30%, transparent);
  transition: background-color 0.3s ease; /* Add transition */
}

.particles .particle-large {
  width: 6px;
  height: 6px;
  background: color-mix(in srgb, var(--accent-color) 40%, transparent);
  box-shadow: 0 0 10px 2px color-mix(in srgb, var(--accent-color) 20%, transparent);
  transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Add transition for background and shadow */
}

.particles .particle-big {
  pointer-events: none;
  z-index: 2;
  animation: particleBigFloat 18s linear infinite;
  transition: background-color 0.3s ease; /* Transition for inline background style */
}

@keyframes particleBigFloat {
  0% {
    opacity: 0.7;
    transform: scale(1) translateY(0);
  }
  50% {
    opacity: 0.9;
    transform: scale(1.07) translateY(-30px);
  }
  100% {
    opacity: 0.7;
    transform: scale(1) translateY(0);
  }
}

@keyframes particles {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 0.5;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 0.8;
  }
  100% {
    transform: translateY(-100vh) rotate(720deg);
    opacity: 0;
  }
}

/* Random movement patterns */
.particles span:nth-child(3n) {
  animation-name: particles-zigzag;
}

.particles span:nth-child(5n) {
  animation-name: particles-pulse;
}

@keyframes particles-zigzag {
  0% {
    transform: translateY(0) translateX(0);
    opacity: 0.5;
  }
  25% {
    transform: translateY(-25vh) translateX(30px);
  }
  50% {
    transform: translateY(-50vh) translateX(-30px);
  }
  75% {
    transform: translateY(-75vh) translateX(15px);
  }
  100% {
    transform: translateY(-100vh) translateX(0);
    opacity: 0;
  }
}

@keyframes particles-pulse {
  0% {
    transform: translateY(0) scale(1);
    opacity: 0.5;
  }
  50% {
    transform: translateY(-50vh) scale(1.5);
    opacity: 1;
  }
  100% {
    transform: translateY(-100vh) scale(0.5);
    opacity: 0;
  }
}

/* Generate 50 particle elements dynamically */
.particles span:nth-child(1) { left: 10%; animation-delay: 0s; }
.particles span:nth-child(2) { left: 20%; animation-delay: 2s; animation-duration: 12s; }
.particles span:nth-child(3) { left: 30%; animation-delay: 4s; }
.particles span:nth-child(4) { left: 40%; animation-delay: 0s; animation-duration: 18s; }
.particles span:nth-child(5) { left: 50%; animation-delay: 10s; }
.particles span:nth-child(6) { left: 60%; animation-delay: 6s; }
.particles span:nth-child(7) { left: 70%; animation-delay: 2s; animation-duration: 20s; }
.particles span:nth-child(8) { left: 80%; animation-delay: 1s; }
.particles span:nth-child(9) { left: 90%; animation-delay: 3s; animation-duration: 35s; }
.particles span:nth-child(10) { left: 95%; animation-delay: 0s; animation-duration: 11s; }

/* Additional particles with different positions */
.particles span:nth-child(11) { left: 15%; top: 20%; animation-delay: 1s; }
.particles span:nth-child(12) { left: 25%; top: 30%; animation-delay: 3s; animation-duration: 14s; }
.particles span:nth-child(13) { left: 35%; top: 10%; animation-delay: 5s; }
.particles span:nth-child(14) { left: 45%; top: 50%; animation-delay: 2s; animation-duration: 17s; }
.particles span:nth-child(15) { left: 55%; top: 40%; animation-delay: 4s; }

/* Create more for a richer effect */
.particles span:nth-child(16) { left: 65%; top: 25%; animation-delay: 0s; }
.particles span:nth-child(17) { left: 75%; top: 35%; animation-delay: 2s; animation-duration: 13s; }
.particles span:nth-child(18) { left: 85%; top: 15%; animation-delay: 4s; }
.particles span:nth-child(19) { left: 5%; top: 45%; animation-delay: 1s; animation-duration: 19s; }
.particles span:nth-child(20) { left: 95%; top: 55%; animation-delay: 3s; }

/* Circuit board pattern overlay */
.circuit-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
      linear-gradient(var(--circuit-color) 1px, transparent 1px),
      linear-gradient(90deg, var(--circuit-color) 1px, transparent 1px);
  background-size: 30px 30px;
  opacity: 0.5;
  z-index: 2;
  transition: background-image 0.3s ease; /* Transition for background image (gradient color) */
}

/* Radial gradient for depth */
.radial-gradient {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, var(--gradient-start) 0%, var(--gradient-end) 70%);
  z-index: 0;
  transition: background 0.3s ease; /* Transition for background gradient */
}

/* Glowing border effect */
@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
  
  /* Update card background utility to ensure transparency in both modes */
  .card-background {
    @apply bg-transparent backdrop-blur-[4px] shadow-lg border border-[var(--border-color)] rounded-lg transition-all duration-300 ease-in-out; 
  }
  
  /* Light mode override if needed */
  .light-mode .card-background {
    @apply bg-transparent backdrop-blur-[4px];
  }
  
  /* Dark mode override if needed */
  .dark-mode .card-background {
    @apply bg-transparent backdrop-blur-[4px];
  }

  /* Utility class for text that should adapt to theme */
  .theme-text-accent {
    @apply text-[var(--text-accent)] transition-colors duration-300;
  }

  .theme-text-primary {
    @apply text-[var(--text-primary)] transition-colors duration-300;
  }

  .theme-text-secondary {
    @apply text-[var(--text-secondary)] transition-colors duration-300;
  }
}

/* Theme Toggle Button */
.theme-toggle {
  background: transparent; 
  backdrop-filter: blur(5px);
  border-radius: 50%;
  width: 50px; /* Keep size or adjust as needed */
  height: 50px; /* Keep size or adjust as needed */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 0 15px rgba(0,0,0,0.15);
  transition: background-color 0.3s ease, border-color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease; 
  /* border: 1px solid var(--border-color); */ /* Border is currently removed, keep as is or re-add if desired */
}

.theme-toggle:hover {
  transform: scale(1.1);
}

/* Theme Toggle Button - Enhanced */
.theme-toggle {
  background: transparent; 
  backdrop-filter: blur(5px);
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 0 15px rgba(0,0,0,0.15);
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transform-origin: center;
  position: relative;
  /* border styles are now handled with spans inside the component */
}

.theme-toggle:hover {
  transform: scale(1.15) rotate(5deg);
}

.theme-toggle:active {
  transform: scale(0.95);
}

/* Custom animations for the theme toggle */
@keyframes pulse-slow {
  0% { transform: scale(0.95); opacity: 0.7; }
  50% { transform: scale(1.05); opacity: 1; }
  100% { transform: scale(0.95); opacity: 0.7; }
}

.animate-pulse-slow {
  animation: pulse-slow 3s ease-in-out infinite;
}

@keyframes twinkle {
  0% { opacity: 0.2; }
  50% { opacity: 1; }
  100% { opacity: 0.2; }
}

.animate-twinkle {
  animation: twinkle 2s ease-in-out infinite;
}

/* Bubble animations for light mode */
@keyframes bubbleFloat {
  0%, 100% {
    transform: translateY(0) translateX(0);
    opacity: 0.7;
  }
  25% {
    transform: translateY(-100px) translateX(25px);
    opacity: 0.9;
  }
  50% {
    transform: translateY(-150px) translateX(-25px);
    opacity: 0.8;
  }
  75% {
    transform: translateY(-50px) translateX(15px);
    opacity: 0.6;
  }
}

@keyframes bubbleFloatSmall {
  0%, 100% {
    transform: translateY(0) translateX(0) scale(1);
    opacity: 0.6;
  }
  25% {
    transform: translateY(-40px) translateX(15px) scale(1.2);
    opacity: 0.9;
  }
  50% {
    transform: translateY(-80px) translateX(-15px) scale(1.1);
    opacity: 0.7;
  }
  75% {
    transform: translateY(-30px) translateX(8px) scale(0.9);
    opacity: 0.5;
  }
}

/* Rising bubble animations */
@keyframes risingBubble {
  0% {
    transform: translateY(0) translateX(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(-100vh) translateX(20px);
    opacity: 0;
  }
}

@keyframes risingBubbleWiggle {
  0% {
    transform: translateY(0) translateX(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
    transform: translateY(-15vh) translateX(10px);
  }
  25% {
    transform: translateY(-25vh) translateX(-15px);
  }
  50% {
    transform: translateY(-50vh) translateX(20px);
    opacity: 0.8;
  }
  75% {
    transform: translateY(-75vh) translateX(-10px);
    opacity: 0.5;
  }
  100% {
    transform: translateY(-100vh) translateX(0);
    opacity: 0;
  }
}

@keyframes risingBubbleSlow {
  0% {
    transform: translateY(0) translateX(0) scale(1);
    opacity: 0;
  }
  10% {
    opacity: 0.7;
  }
  50% {
    transform: translateY(-50vh) translateX(30px) scale(1.1);
    opacity: 0.5;
  }
  90% {
    opacity: 0.3;
  }
  100% {
    transform: translateY(-100vh) translateX(-20px) scale(0.9);
    opacity: 0;
  }
}

/* Custom Scrollbar */
.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
  height: 0px; /* Hide horizontal scrollbar */
}

.scrollbar-thin::-webkit-scrollbar-track {
  background: transparent;
}

.scrollbar-thin::-webkit-scrollbar-thumb {
  background-color: var(--accent-color);
  border-radius: 9999px;
  opacity: 0.5;
}

.scrollbar-thin::-webkit-scrollbar-thumb:hover {
  opacity: 0.8;
}

/* Hide horizontal scrollbar for all elements */
.scrollbar-thin::-webkit-scrollbar:horizontal {
  display: none;
}

/* Firefox scrollbar hiding */
.scrollbar-thin {
  scrollbar-width: thin;
  scrollbar-color: var(--accent-color) transparent;
}

/* Hide horizontal scrollbar in Firefox */
.scrollbar-thin {
  overflow-x: hidden;
}

/* Global horizontal scrollbar hiding */
*::-webkit-scrollbar:horizontal {
  display: none;
}

/* Ensure no horizontal overflow on body and html */
html, body {
  overflow-x: hidden;
}

/* Hide scrollbar for specific containers that might have horizontal scroll */
.overflow-x-auto::-webkit-scrollbar {
  height: 0px;
  display: none;
}

/* Profile Card animations */
@keyframes float {
  0%, 100% { transform: translateY(0) rotate(0); }
  50% { transform: translateY(-10px) rotate(3deg); }
}

@keyframes pulse-slow {
  0% { opacity: 0.3; }
  100% { opacity: 0.7; }
}

@keyframes spin-slow {
  0% { transform: rotate(0deg);}
  100% { transform: rotate(360deg);}
}

html,
body {
  height: 100%; /* Or min-height: 100%; */
  width: 100%;
  overflow-x: hidden; /* Prevent horizontal scroll */
  /* Ensure body can scroll if content overflows */
}

body {
  display: flex;
  flex-direction: column;
  position: relative; /* Important for some fixed/absolute children layouts */
}

/* If you have a #__next div or similar root element from older Next.js versions, ensure it's also flexible */
/* For app router, the direct children of body in layout.tsx are more relevant */
main {
  flex-grow: 1; /* Allows main content area to expand */
  overflow-y: auto; /* Allow vertical scrolling within main if needed, or let body handle it */
}

/* Reset any potential overflow hidden on root elements if applied by other global styles */
html:has(body) {
  overflow-y: auto; /* Or visible, depending on desired scroll behavior */
}